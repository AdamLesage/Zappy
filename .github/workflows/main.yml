name: Github Actions Zappy
on:
  push:
    branches-ignore:
      - "ga-ignore-*"
  pull_request:
    branches-ignore:
      - "ga-ignore-*"

jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: checkout current repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: execute coding style . .
        run: |
          check.sh $(pwd) $(pwd)
      - name: print error annotations
        timeout-minutes: 2
        run: |
            if [ -s "coding-style-reports.log" ]; then
              errors_found=false
              while IFS= read -r line; do
                if [[ "$line" != "" ]]; then
                  error_type=$(echo "$line" | awk -F '[-: ]+' '{print $3}')
                  filename=$(echo "$line" | cut -d ':' -f 1)
                  line_number=$(echo "$line" | cut -d ':' -f 2)
                  error_code=$(echo "$line" | cut -d '-' -f 2)
                  if [[ "$error_type" != "C-01" ]]; then
                    title="$error_type coding style error: #$filename##L$line_number"
                    description="C-$error_code"
                    echo "::error title=\"$title\":: $description"
                    errors_found=true
                  fi
                fi
              done < "coding-style-reports.log"
              if [[ "$errors_found" == true ]]; then
                exit 1
              fi
            fi
  check_compilation:
    needs:
      - check_coding_style
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker:latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - run: make re
      timeout-minutes: 1
  push_to_mirror:
    needs:
      - check_compilation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: pixta-dev/repository-mirroring-action@v1
      with:
        target_repo_url: ${{ secrets.REPOSITORY_SSH }}
        ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
